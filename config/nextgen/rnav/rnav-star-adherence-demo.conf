  # Copyright Â© 2023 United States Government as represented by the
  # Administrator of the National Aeronautics and Space Administration.  All
  # Rights Reserved.
  #
  # No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
  # WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
  # BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM
  # TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
  # A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
  # SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION,
  # IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES
  # NOT, IN ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY
  # PRIOR RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE
  # PRODUCTS OR ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT
  # SOFTWARE.  FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND
  # LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL
  # SOFTWARE, AND DISTRIBUTES IT "AS IS."
  #
  # Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
  # AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS,
  # AS WELL AS ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT
  # SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES
  # ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR
  # RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL
  # INDEMNIFY AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS
  # AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT
  # PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE
  # THE IMMEDIATE, UNILATERAL TERMINATION OF THIS AGREEMENT.

# This is an actor-based system which performs runtime verification for the rnav
# star adherence property for three arrival procedures at SFO (BDEGA2, DYAMD3 and
# SERFR3).

name = "rnav-star-adherence-demo"

loglevel = "warning"
self-termination = true
show-exceptions = true

actors = [
  # replaying recorded data as ExtendedFlightState objects
  {
     name = "sfdps-replay"
     class = "gov.nasa.mesa.dataAcquisition.TimedReplayActor"
     write-to = "fstate"
     can-reset-clock = true
     reader = {
       class = "gov.nasa.mesa.nextgen.core.FlightStateArchiveReader"
       pathname = "data/tracks.txt.gz"
       buffer-size = 32768
     }
  },

  # filtering flight messages based on the criteria specified in this actor
  {
     name = "filteredflightInfoGenerator"
     class = "gov.nasa.mesa.nextgen.dataProcessing.filters.FilteredFlightStateGenerator"
     read-from = "fstate"
     write-to = "ffstate"
     equipment-qualifier = ["L","G","Z","I"]
     arrival-point = ["KSFO"]
  },

  # converting the ExtendedFlightState objects into WaypointVisit objects which are
  # understandable by the monitors
  {
     name = "waypointTraceGenerator"
     class = "gov.nasa.mesa.nextgen.dataProcessing.Dynamic_RNAV_STAR_TraceGenerator"
     read-from = "ffstate"
     write-to = "waypoint"
     deviation = 1.0
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.BDEGA2 arrival procedure
    {
      name = "rnav-bdega2-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      monitor.class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
      airport = "KSFO"
      star = "BDEGA2"
      read-from = "waypoint"
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.DYAMD3 arrival procedure
    {
      name = "rnav-dyamd3-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      monitor.class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
      airport = "KSFO"
      star = "DYAMD3"
      read-from = "waypoint"
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.SERFR3 arrival procedure
    {
      name = "rnav-serfr3-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      monitor.class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
      airport = "KSFO"
      star = "SERFR3"
      read-from = "waypoint"
    },

    # a world wind actor which provides visualization for flights
    {
      name = "GeoViewer"
      class = ".ww.RaceViewerActor"

      run-control = true
      collapse-panels = ["sync"]
      layer-categories = ["data"]

      layers = [
        { name = "livePos"
          class = "gov.nasa.mesa.nextgen.ww.MESAFlightStateViewerLayer"
          read-from = "ffstate"
          description = "SWIM sfdps flight positions"
          trackinfo-base = "/trackinfo"
          color = "red"
        },
        { name = "KSFO.BDEGA2"
          airport = "KSFO"
          star = "BDEGA2"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star waypoints"
          categories = ["data"]
          enable = true
          waypoint-color = "blue"
          goto-altitude = 1500000d
        },
        { name = "KSFO.DYAMD3"
          airport = "KSFO"
          star = "DYAMD3"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star Waypoints tracks"
          categories = ["data"]
          enable = true
          waypoint-color = "yellow"
          goto-altitude = 1500000d
        },
        { name = "KSFO.SERFR3"
          airport = "KSFO"
          star = "SERFR3"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star Waypoints tracks"
          categories = ["data"]
          enable = true
          waypoint-color = "green"
          goto-altitude = 1500000d
        }
      ]

      size = [1600, 1200]

      eye {
        lat = 37.618889
        lon = -122.375
        altitude-ft = 8000000d
      }

      cache-dir = ${user.home}"/.WorldWind"
    }
]

include classpath("config/logging-race.conf")
