# This is an actor-based system which performs runtime verification for the rnav
# star adherence property for three arrival procedures at SFO (BDEGA2, DYAMD3 and
# SERFR3).

name = "rnav-star-adherence-demo"

loglevel = "warning"
self-termination = true
show-exceptions = true

actors = [
  # replaying recorded data as ExtendedFlightState objects
  {
     name = "sfdps-replay"
     class = "gov.nasa.mesa.dataAcquisition.TimedReplayActor"
     write-to = "fstate"
     can-reset-clock = true
     reader = {
       class = "gov.nasa.mesa.nextgen.core.FlightStateArchiveReader"
       pathname = "data/tracks.txt.gz"
       buffer-size = 32768
     }
  },

  # filtering flight messages based on the criteria specified in this actor
  {
     name = "filteredflightInfoGenerator"
     class = "gov.nasa.mesa.nextgen.dataProcessing.filters.FilteredFlightStateGenerator"
     read-from = "fstate"
     write-to = "ffstate"
     equipment-qualifier = ["L","G","Z","I"]
     arrival-point = ["KSFO"]
  },

  # converting the ExtendedFlightState objects into WaypointVisit objects which are
  # understandable by the monitors
  {
     name = "waypointTraceGenerator"
     class = "gov.nasa.mesa.nextgen.dataProcessing.Dynamic_RNAV_STAR_TraceGenerator"
     read-from = "ffstate"
     write-to = "waypoint"
     deviation = 1.0
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.BDEGA2 arrival procedure
    {
      name = "rnav-bdega2-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      read-from = "waypoint"
      monitor {
        class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
        airport = "KSFO"
        star = "BDEGA2"
        daut {
          print-error = "false"
          debug-option = "false"
        }
      }
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.DYAMD3 arrival procedure
    {
      name = "rnav-dyamd3-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      read-from = "waypoint"
      monitor {
        class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
        airport = "KSFO"
        star = "DYAMD3"
        daut {
          print-error = "false"
          debug-option = "false"
        }
      }
    },

    # a monitor that checks for the RNAV STAR Adherence for the KSFO.SERFR3 arrival procedure
    {
      name = "rnav-serfr3-monitor"
      class = "gov.nasa.mesa.monitoring.actors.MonitorActor"
      read-from = "waypoint"
      monitor {
        class = "gov.nasa.mesa.nextgen.verification.monitors.rnav.RNAV_STAR_Adherence"
        airport = "KSFO"
        star = "SERFR3"
        daut {
          print-error = "false"
          debug-option = "false"
        }
      }
    },

    # a world wind actor which provides visualization for flights
    {
      name = "GeoViewer"
      class = ".ww.RaceViewerActor"

      run-control = true
      collapse-panels = ["sync"]
      layer-categories = ["data"]

      layers = [
        { name = "livePos"
          class = "gov.nasa.mesa.nextgen.ww.MESAFlightStateViewerLayer"
          read-from = "ffstate"
          description = "SWIM sfdps flight positions"
          trackinfo-base = "/trackinfo"
          color = "red"
        },
        { name = "KSFO.BDEGA2"
          airport = "KSFO"
          star = "BDEGA2"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star waypoints"
          categories = ["data"]
          enable = true
          waypoint-color = "blue"
          goto-altitude = 1500000d
        },
        { name = "KSFO.DYAMD3"
          airport = "KSFO"
          star = "DYAMD3"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star Waypoints tracks"
          categories = ["data"]
          enable = true
          waypoint-color = "yellow"
          goto-altitude = 1500000d
        },
        { name = "KSFO.SERFR3"
          airport = "KSFO"
          star = "SERFR3"
          class = "gov.nasa.mesa.nextgen.ww.StarLayer"
          description = "Star Waypoints tracks"
          categories = ["data"]
          enable = true
          waypoint-color = "green"
          goto-altitude = 1500000d
        }
      ]

      size = [1600, 1200]

      eye {
        lat = 37.618889
        lon = -122.375
        altitude-ft = 8000000d
      }

      cache-dir = ${user.home}"/.WorldWind"
    }
]

include classpath("config/logging-race.conf")
